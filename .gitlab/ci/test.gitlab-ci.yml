test_fact:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_FACT=$FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test
  parallel:
    matrix:
      - FACT:
          - CHOLMOD
          - LAPACK
          - MA27
          - MA57
          - MA86
          - MA97
          - MUMPS
          - SPQR
          - Umfpack

test_lps:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$LPS
    - make build_tests test
  parallel:
    matrix:
      - LPS:
        - SoPlex
        - HiGHS

test_coverage:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_GENERATE_COVERAGE=On
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test_coverage
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

test_num_asserts:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_NUM_ASSERTS=On
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test

# Excluding python tests since they are built by tox
# Excluding problem scaling tests since valgrind messes with floating point exceptions
test_memcheck:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests
    - >-
      ctest -T memcheck
      -E "python_sleqp_tests|problem_scaling_test"
      --overwrite MemoryCheckCommandOptions="--leak-check=full --error-exitcode=1"
  artifacts:
    paths:
      - build/Testing/Temporary/MemoryChecker.*.log

test_sanitizers:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
      -DUSE_SANITIZER=$SANITIZER
    - make build_tests test
  parallel:
    matrix:
      - SANITIZER:
        - 'Address;Undefined;Leak'
        - Thread

test_python:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_C_UNIT_TESTS=Off
      -DSLEQP_ENABLE_PYTHON=On
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test
  artifacts:
    when: always
    reports:
      junit: ./bindings/python/python_test_output.xml

test_octave_mex:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_ENABLE_OCTAVE_MEX=On
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test

test_ampl:
  extends: .test
  script:
    - cd build
    - >-
      cmake ..
      -DCMAKE_BUILD_TYPE="Debug"
      -DSLEQP_ENABLE_PYTHON=Off
      -DSLEQP_ENABLE_AMPL=On
      -DSLEQP_FACT=$DEFAULT_FACT
      -DSLEQP_LPS=$DEFAULT_LPS
    - make build_tests test
