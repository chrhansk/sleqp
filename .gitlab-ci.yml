image: "moto.math.nat.tu-bs.de:5050/code/images/sleqp_builddeps:latest"

stages:
  - test
  - build
  - package
  - install
  - downstream

variables:
  CTEST_OUTPUT_ON_FAILURE: '1'

# run tests
.test_template: &test_job
  stage: test
  before_script:
    - mkdir -p build
  dependencies: []

# TODO: Run tests as soon as we can get a MUMPS version without OpenMP
test_MUMPS:
  <<: *test_job
  script:
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=MUMPS -DSLEQP_LPS=SoPlex
    - make

test_Umfpack:
  <<: *test_job
  script:
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=Umfpack -DSLEQP_LPS=SoPlex
    - make all build_tests test

test_MA27:
  <<: *test_job
  script:
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=MA27 -DSLEQP_LPS=SoPlex
    - make all build_tests test

test_coverage:
  <<: *test_job
  script:
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=Off -DSLEQP_GENERATE_COVERAGE=On
    - make all build_tests test

# TODO: Find out why these crash
# test_MA57:
#   <<: *test_job
#   script:
#     - cd build
#     - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=MA57 -DSLEQP_LPS=SoPlex
#     - make all build_tests test

# test_MA86:
#   <<: *test_job
#   script:
#     - cd build
#     - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=MA86 -DSLEQP_LPS=SoPlex
#     - make all build_tests test

test_MA97:
  <<: *test_job
  script:
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DSLEQP_ENABLE_UNIT_TESTS=On -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=MA97 -DSLEQP_LPS=SoPlex
    - make all build_tests test

# TODO: As soon as we get capable compilers, add misc. sanitizers to tests


build:
  stage: build
  only:
    - master
  script:
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX="/usr" -DCMAKE_CXX_FLAGS="-O3 -g" -DCMAKE_C_FLAGS="-O3 -g" -DSLEQP_ENABLE_UNIT_TESTS=Off -DSLEQP_ENABLE_PYTHON=On -DSLEQP_FACT=Umfpack -DSLEQP_LPS=SoPlex
    - make -j$(nproc)
  artifacts:
    paths:
      - build
      - bindings/python

package:
  stage: package
  only:
    - master
  dependencies:
    - build
  script:
    - cd build
    - make package
  dependencies:
    - build
  artifacts:
    paths:
      - build/*.deb
      - build/*.bz2

package_wheel:
  stage: package
  only:
    - master
  dependencies:
    - build
  script:
    - cd build
    - make python_sleqp_bdist_wheel
  dependencies:
    - build
  artifacts:
    paths:
      - bindings/python/dist/*.whl

package_sdist:
  stage: package
  only:
    - master
  dependencies:
    - build
  script:
    - cd build
    - make python_sleqp_sdist
  dependencies:
    - build
  artifacts:
    paths:
      - bindings/python/dist/*.tar.gz

install_package:
  stage: install
  only:
    - master
  script:
    - cd build
    - apt -y install ./*.deb

trigger_downstream:
  stage: downstream
  only:
    - master
  trigger:
    project: code/INDo
    strategy: depend
