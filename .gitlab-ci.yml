image: "moto.math.nat.tu-bs.de:5050/code/sleqp:7.0.1"

stages:
- prepare
- build
- test
- package
- install
- downstream

variables:
  CTEST_OUTPUT_ON_FAILURE: '1'

# run cmake
prepare:
  stage: prepare
  script:
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DSLEQP_ENABLE_PYTHON=On
  artifacts:
    paths:
      - build
      - bindings/python

# run make
build:
  stage: build
  script:
    - cd build
    - make -j$(nproc)
  dependencies:
    - prepare
  artifacts:
    paths:
      - build
      - bindings/python


# run tests
.test_template: &test_job
  stage: test
  script:
    - mkdir -p build
    - cd build
    - cmake .. -DSLEQP_ENABLE_PYTHON=On
    - make
    - make build_tests
    - PYTHONMALLOC='malloc' make test
  dependencies: []

test_undefined_sanitizer:
  <<: *test_job
  variables:
    CFLAGS: '-g -fsanitize=undefined'

# Not possible due to old compiler
# test_address_sanitizer:
#   <<: *test_job
#   variables:
#     CFLAGS: '-g -fsanitize=address -fno-omit-frame-pointer'

# test_leak_sanitizer:
#   <<: *test_job
#   variables:
#     CFLAGS: '-g -fsanitize=leak'

test_memory_sanitizer:
  <<: *test_job
  variables:
    CFLAGS: '-g -fsanitize=memory'


package:
  stage: package
  script:
    - cd build
    - make package
  dependencies:
    - build
  artifacts:
    paths:
      - build/*.deb
      - build/*.bz2

package_wheel:
  stage: package
  script:
    - cd build
    - make python_sleqp_bdist_wheel
  dependencies:
    - build
  artifacts:
    paths:
      - bindings/python/dist/*.whl

package_sdist:
  stage: package
  script:
    - cd build
    - make python_sleqp_sdist
  dependencies:
    - build
  artifacts:
    paths:
      - bindings/python/dist/*.tar.gz

install_package:
  stage: install
  script:
    - cd build
    - apt -y install ./*.deb

trigger_downstream:
  stage: downstream
  only:
    - master
  script:
    - "curl --fail -X POST -F token=${SLEQP_INDO_TRIGGER_TOKEN} ${CI_API_V4_URL}/projects/176/ref/master/trigger/pipeline"
